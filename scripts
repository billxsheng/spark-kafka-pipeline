Kafka commands
bin/zookeeper-server-start.sh config/zookeeper.properties <— start zookeeper server

bin/kafka-server-start.sh config/server.properties <— start kafka server

bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic messages <— create topic test

bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test <— run producer

bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic messages --from-beginning <— dump out messages

- Kafka is a distributed streaming platform
    - publish and subscribe to streams of records like a message queue
    - Store stress of records
    - Process streams as they occur
- Used for
    - Real time streaming data pipelines that get data between apps
    - Real time streaming applications that transform or react to streams of data
- A topic is a category or feed name to which records are published 
    - A topic can have several consumers

Cassandra CQL Shell
bin/cqlsh
- entering vocabulary key space
	- describe key spaces
	- USE vocabulary;
	- SELECT * FROM words;

CREATE KEYSPACE vocabulary
    WITH REPLICATION = {
        'class' : 'SimpleStrategy',
        'replication_factor' : 1
    };
USE vocabulary;
CREATE TABLE words (word text PRIMARY KEY, count int);


Spark Streaming - Kafka Integration 
- Kafka consumer API

Data Flow
Kafka Topic —> Spark Streaming —> Cassandra Table

spark-submit --class com.billsheng.SparkPipelineApplication --master local target/spark-pipeline-1.0-SNAPSHOT.jar 

Checkpoints
- retain state between batches of data being processed
- should store checkpoints in hdfs, s3, kafka 

